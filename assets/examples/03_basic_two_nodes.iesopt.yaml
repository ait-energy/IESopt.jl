# Comments indicate points of this model file that changed compared to the previous examples. All other elements are not
# explained/described anymore. See also: 02_advanced_single_node.yaml

config:
  general:
    version:
      core: 2.6.3
  optimization:
    problem_type: LP
    snapshots:
      count: 4
    solver:
      name: highs

carriers:
  electricity: {}
  gas: {}
  co2: {}

components:
  # There are now two nodes in the power grid, that will be connected by a line; node2 includes a lossless storage.
  node1:
    type: Node
    carrier: electricity
  
  node2:
    type: Node
    carrier: electricity
    has_state: true
    state_lb: 0
    state_ub: 10

  # This new type of core component is used to connect two nodes (that use the same energy carrier). It can model
  # directional flows, losses, delays, flow limits, and so on. Specifying "capacity" as we do it here, constructs a
  # connection that allows flows with -5 <= flow <= 5. The Nodes that are set as "from" and "to" indicate the direction
  # of the flow; here positive values relate to a flow "from node1 to node2".
  conn:
    type: Connection
    capacity: 5
    node_from: node1
    node_to: node2
  
  # The wind power plant now feeds into node2 with a modified availability factor. 
  plant_wind:
    type: Unit
    outputs: {electricity: node2}
    conversion: ~ -> 1 electricity
    capacity: 10 out:electricity
    availability_factor: [0.9, 0.0, 0.9, 0.0]
  
  # The gas power plant now feeds into node1. 
  plant_gas:
    type: Unit
    inputs: {gas: gas_grid}
    outputs: {electricity: node1, co2: total_co2}
    conversion: 1 gas -> 0.4 electricity + 0.2 co2
    capacity: 10 out:electricity
  
  # Both nodes feature a unique demand time series, represented by two different Profiles.
  demand1:
    type: Profile
    carrier: electricity
    node_from: node1
    value: [3, 3, 3, 3]
  
  demand2:
    type: Profile
    carrier: electricity
    node_from: node2
    value: [4, 3, 1, 5]

  gas_grid:
    type: Node
    carrier: gas
  
  total_co2:
    type: Node
    carrier: co2

  create_gas:
    type: Profile
    carrier: gas
    node_to: gas_grid
    mode: create
    cost: 50.0
  
  co2_emissions:
    type: Profile
    carrier: co2
    node_from: total_co2
    mode: destroy
    cost: 100.0
