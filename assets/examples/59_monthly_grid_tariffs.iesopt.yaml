config:
  general:
    version:
      core: 2.9.1
  optimization:
    problem_type: LP
    snapshots:
      count: 8736  # this allows easily splitting the year in days/weeks/months
    solver:
      name: highs
  files:
    data: data.csv
  paths:
    files: files/59
    components: files/59
    addons: files/59

addons:
  Example59: {}

carriers:
  electricity: {}

load_components:
  - grid_tariffs.csv

components:
  market:
    type: Profile
    carrier: electricity
    node_to: grid_market
    mode: ranged
    cost: price@data

  grid_market:
    type: Node
    carrier: electricity

  grid_internal:
    type: Node
    carrier: electricity
  
  # NOTE: `0.05` (here ct/kWh) is the energy related tariff for consumption.
  grid_connection_buy:
    type: Connection
    node_from: grid_market
    node_to: grid_internal
    lb: 0
    # The cost of the `ub` will be enforced via the addon, this is just the physical limit.
    ub: 1000
    cost: 0.05
  
  # NOTE: No power peak related cost for feeding electricity back to the grid.
  grid_connection_sell:
    type: Connection
    node_from: grid_internal
    node_to: grid_market
    lb: 0
    ub: 1000
    cost: 0.07

  # Using a simple EV (with basic bidirectional charging) as demand, compare example "52_simple_ev".

  charger:
    type: Connection
    node_from: grid_internal
    node_to: ev
    lb: -40.0 * connected@data
    ub: 40.0 * connected@data

  ev:
    type: Node
    carrier: electricity
    has_state: true
    state_lb: 0
    state_ub: 100

  # NOTE: Upscaling the demand, assuming 92.5% efficiency "charge-to-tire".
  ev_demand:
    type: Profile
    carrier: electricity
    node_from: ev
    value: demand@data / 0.925
