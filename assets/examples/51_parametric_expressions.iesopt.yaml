config:
  general:
    version:
      core: 2.7.0
  optimization:
    problem_type: PARAMETRIC+LP
    snapshots:
      count: 168
    solver:
      name: highs
  results:
    enabled: false
  files:
    data: example_data.csv

carriers:
  electricity: {}
  gas: {}
  co2: {}

components:
  node1:
    type: Node
    carrier: electricity
  
  node2:
    type: Node
    carrier: electricity
    has_state: true
    state_lb: $(0)
    state_ub: $(10)

  conn:
    type: Connection
    capacity: $(5)
    node_from: node1
    node_to: node2
  
  # We could also use: `$(10) out:electricity` to model a parametric capacity.
  plant_wind:
    type: Unit
    outputs: {electricity: node2}
    conversion: ~ -> 1 electricity
    capacity: 10 out:electricity
    availability_factor: $(ex07_plant_wind_availability_factor@data)
  
  plant_gas:
    type: Unit
    inputs: {gas: gas_grid}
    outputs: {electricity: node1, co2: total_co2}
    conversion: 1 gas -> 0.4 electricity + 0.2 co2
    capacity: build:value out:electricity
  
  build:
    type: Decision
    lb: $(0)
    ub: $(10)
    cost: $(0)
  
  demand1:
    type: Profile
    carrier: electricity
    node_from: node1
    value: $(ex07_demand1_value@data)
  
  demand2:
    type: Profile
    carrier: electricity
    node_from: node2
    value: $(ex07_demand2_value@data)

  gas_grid:
    type: Node
    carrier: gas
  
  total_co2:
    type: Node
    carrier: co2

  create_gas:
    type: Profile
    carrier: gas
    node_to: gas_grid
    mode: create
    cost: $(50)
  
  co2_emissions:
    type: Profile
    carrier: co2
    node_from: total_co2
    mode: destroy
    cost: $(100.)
